import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.cyclonedx.bom' version '1.10.0'
    id 'org.openapi.generator' version '7.9.0'
    id 'org.flywaydb.flyway' version '10.21.0'
    id 'org.owasp.dependencycheck' version '11.1.0'
    id 'jacoco'
}

group = parent.group
version = parent.version

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    // for the code generated by org.openapi.generator
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.25'
    implementation 'io.swagger.core.v3:swagger-models:2.2.25'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

var generatePetstore = tasks.register('generatePetstore', GenerateTask) {
    generatorName.set('spring')
    inputSpec.set("$layout.projectDirectory/src/main/openapi/petstore.json")
    outputDir.set(layout.buildDirectory.get().dir("generated/sources/petstore").getAsFile().getAbsolutePath())
    apiPackage.set("org.angnysa.petstore.backend.rest.generated.api")
    modelPackage.set("org.angnysa.petstore.backend.rest.generated.model")
    configOptions.set([
            // https://openapi-generator.tech/docs/generators/spring
            dateLibrary                             : "java8",
            enumUnknownDefaultCase                  : "true",
            interfaceOnly                           : "true",
            performBeanValidation                   : "true",
            skipDefaultInterface                    : "true",
            useSpringBoot3                          : "true",
            useSpringController                     : "true"
    ])
}.get()

compileJava.dependsOn generatePetstore

sourceSets.main.java.srcDirs += generatePetstore.outputDir.get() + "/src/main/java"

// dependency check

//check.dependsOn dependencyCheckAnalyze

// Spring boot run

bootRun.dependsOn